spring:
  application:
    name: spring

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME:acron}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: always

  security:
    oauth2:
      client:
        registration:
          discord:
            client-id: ${DISCORD_CLIENT_ID}
            client-secret: ${DISCORD_CLIENT_SECRET}
            scope:
              - identify
              - email
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          discord:
            authorization-uri: https://discord.com/api/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: id

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: ${JPA_FORMAT_SQL:false}
        dialect: org.hibernate.dialect.MySQLDialect

gemini:
  api:
    key: ${GEMINI_API_KEY}

claude:
  api:
    key: ${CLAUDE_API_KEY:}

openai:
  api:
    key: ${OPENAI_API_KEY:}

discord:
  bot-token: ${DISCORD_BOT_TOKEN:}
  user-id: ${DISCORD_USER_ID:}

app:
  frontend:
    url: ${FRONTEND_URL:http://localhost:3000}
